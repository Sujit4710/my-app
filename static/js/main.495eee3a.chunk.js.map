{"version":3,"sources":["Component/Alert.js","Component/Navbar.js","Component/TextfForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","msg","Navbar","useState","modeChange","setmodeChange","Mode","style","backgroundColor","href","title","id","onClick","toggle","htmlFor","TextfForm","text","settext","Title","value","onChange","event","target","rows","Uptext","toUpperCase","App","mode","setmode","setAlert","showAlert","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.495eee3a.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    return (\r\n        \r\n           props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n            </div> \r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, {useState} from 'react'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  const [modeChange, setmodeChange] = useState(\"Enable Dark mode\");\r\n\r\n  const toggleshift = ()=>{\r\n    if(`${props.Mode==='dark'}`){\r\n      setmodeChange(\"Enable Light mode\")\r\n      \r\n    }\r\n    else{\r\n      setmodeChange(\"Enable dark mode\")\r\n    }\r\n  }\r\n    return (\r\n        <div>\r\n          <nav className={`navbar navbar-expand-lg navbar-${props.Mode} `} style={{backgroundColor:props.Mode==='dark'?'#252929':'#8cc8fa'}}>\r\n            <div className=\"container-fluid\">\r\n              <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n              <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n              <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                  <li className=\"nav-item\">\r\n                    <a className=\"nav-link active\" aria-current=\"page\" href='#'>Home</a>\r\n                  </li>\r\n                  {/* <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/about\">About us</Link>\r\n                  </li> */}\r\n                </ul>\r\n                <div className={`form-check form-switch text-${props.Mode==='dark'?'light':'dark'}`}>\r\n                <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggle} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" onClick={toggleshift} htmlFor=\"flexSwitchCheckDefault\">{modeChange}</label>\r\n                </div>\r\n      \r\n              </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport './form.css'\r\n\r\nexport default function TextfForm(props) {\r\n    const [text, settext] = useState(\"Enter Text...\");\r\n\r\n    const OnClick = () => {\r\n        let Uptext = text.toUpperCase();\r\n        settext(Uptext);\r\n    }\r\n\r\n    const OnClickClear = ()=>{\r\n        settext(\"\");\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        settext(event.target.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container my-3\">\r\n            <h1 className={`text-${props.Mode==='dark'?'light':'dark'}`}>{props.Title}</h1>\r\n                <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor:props.Mode==='dark'?'#c1c0cc':'#fff'}} onChange={handleChange} id=\"Textarea\" rows=\"6\"></textarea>\r\n            </div>\r\n            <button className={`btn btn-${props.Mode==='dark'?'secondary':'info'}`} onClick={OnClick}>Convert to Uppercase</button>\r\n            <button className={`btn btn-${props.Mode==='dark'?'secondary':'info'} space`} onClick={OnClickClear}>Clear</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\nimport './App.css';\nimport Alert from './Component/Alert';\nimport Navbar from './Component/Navbar';\nimport TextfForm from './Component/TextfForm';\nimport About from './Component/About';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (msg,type)=>{\n    setAlert({\n      msg:msg,\n      type:type \n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if(mode==='light'){\n      setmode('dark')\n      document.body.style.backgroundColor = '#393b39'\n      showAlert(\"Dark mode is enabled successfully!!!\",\"success\")\n    }\n    else{\n      setmode('light')\n      document.body.style.backgroundColor = '#fff'\n      showAlert(\"Light mode is enabled successfully!!!\",\"success\")\n    }\n  }\n\n  return (\n   <>\n   {/* <Router> */}\n  <Navbar title=\"Saitama\" Mode={mode} toggle={toggleMode}/>\n  <Alert alert={alert}/>\n  \n  {/* <Routes> */}\n          {/* <Route path=\"/about\" element={<About/>}/> */}\n          <TextfForm Title=\"Enter Your Info...\" Mode={mode}/>\n          \n  {/* </Routes>\n  </Router> */}\n  \n  \n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}